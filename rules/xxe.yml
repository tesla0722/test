--- #!~base
description: either the xml source is not client or DTD parsing is disabled
extends: whitelisted_files::whitelisted_files,comments::comments

--- #!python
extends: base
diff: add
description: "sax; etree; pulldom; minidom; xmlrpc: all vulnerable"
file:
    - match: '\.py$'
line:
    - match: 'from xml\s*\.\s*\* import'
    - match: 'import\s*xml\s*.'
    - match: 'sax\.parseString'
tests:
    - pass: "from xml . * import"
    - pass: 'import xml.etree.cElementTree as ET'
    - fail: 'from defusedxml.cElementTree import fromstring'

--- #!java
extends: base
diff: add
file:
    - match: '\.(java|clj)$'
line:
    - match: 'JAXBContext\.newInstance'
    - match: XMLStreamReader
    - match: 'XMLInputFactory\.newInstance\(\)'
    - match: 'SAXParser(Factory)?'
tests:
    - pass: " val saxParser = SAXParserFactory.newInstance()"
    - pass: 'import scala.xml.SAXParser'
    - pass: 'private final XMLInputFactory inputFactory = XMLInputFactory.newInstance();'
    - fail: 'XMLInputFactory'

--- #!scala
extends: base,java
diff: add
file:
    - match: '\.scala$'
line:
    - match: 'XML\.load(File|String|XML)'
tests:
    - pass: " XML.loadFile"
    - fail: "XML.loadBytes"

--- #!dotnet
extends: base
diff: add
line:
    - match: 'Xml(Document|Reader|TextReader|Resolver)+'
file:
    - match: '\.cs$'
tests:
    - pass: "var doc = new XmlDocument();"
    - fail: 'HttpDocument'
