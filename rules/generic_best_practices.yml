--- #!~base
description: Repoguard rules to test for generic best practices
extends: whitelisted_files::whitelisted_files,comments::comments

--- #!unsecure_protocol
extends: base
diff: add
line:
    - match: '(http|ftp)://.+'
    - except: 'http://(\w+\.)*(localhost|127(\.\d+){3}|apache.org)'
    - except: '(xmlns|doctype|DOCTYPE|<prezi><documentStyle>|template|createElementNS|namespace)'
    - except: 'deb\S* http://'
    - except: 'http://169.254.169.254'
    - except: 'http://cloudinit.readthedocs.io'
file:
    - except: '\.(po|json|html|xml|xaml|ism|markdown|md|txt|csv|doc|rdoc|css|gradle|properties|log|wiki|wsdl)$'
    - except: 'scripts/(build|common|release|bootstrap)'
    - except: '^/cookbooks/.*\.rb$'
    - except: 'templates/'
    - except: 'README'
tests:
    - pass: " http://example.com"
    - fail: "http://localhost"
    - fail: "http://127.0.1.1"
    - fail: 'http://'
    - fail: '<databases xmlns:db="http://agavi.org/agavi/config/parts/databases/1.0" xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0">'
    - fail: 'http://www.apache.org/licenses/LICENSE-2.0'
    - fail: 'deb-src http://archive.ubuntu.com/ubuntu/ precise-backports main restricted universe'
    - fail: '<import namespace="http://api.foo.com/" />'
    - fail: 'curl http://169.254.169.254/latest/meta-data/'
    - fail: '# http://cloudinit.readthedocs.io/en/latest/to'

--- #!dangerous_redirect
extends: base
diff: add
line:
    - match: (HttpResponseRedirect|HttpResponsePermanentRedirect|redirect)\((?!["'][^"']+["'])
    - except: <bindingRedirect
    - except: 'Redirect\(\s*reverse\('
    - except: '(HttpResponseRedirectSafe|HttpResponsePermanentRedirectSafe)\('
    - except: ^(from|import) .*HttpResponseRedirect.*
file:
    - except: '(\.config|\.po|\.po\.json|\.md|\.rb|\.xml|\.cfg|urls\.py)$'
tests:
    - pass: " HttpResponseRedirect( $_GET['to'] )"
    - fail: "HttpResponseRedirect('OK')"
    - fail: 'HttpResponseRedirect("OK")'
    - fail: '<bindingRedirect foobar'
    - fail: "from django.http import HttpResponse, HttpResponseBadRequest, HttpResponseRedirect"
    - fail: "import something.HttpResponseRedirect"
    - fail: "jsonLoggingService.log(logMessages.redirectDialogShow);"
    - fail: "response = HttpResponseRedirect(reverse('foo'))"
    - fail: "response = HttpResponsePermanentRedirectSafe(request.GET['url'])"


--- #!http_variable_used
extends: base
diff: add
line:
    - match: (request\.(GET|POST|FILES|META)(\[|\.get)).*
    - except: "['\"]REMOTE_ADDR['\"]"
    - except: '(int|bool)\s*\(\s*request\.'
tests:
    - pass: "request.META.get ( 'next')"
    - pass: "request.META[ 'next' ]"
    - fail: "request.META.get('REMOTE_ADDR')"
    - fail: "request.META[ 'REMOTE_ADDR' ]"
    - fail: "int ( request.GET.get('owner_id', ''))"
    - fail: "foo = bool(request.GET.get('bar', False))"

--- #!security_fix
description: Someone committed - or reverted? - a security fix, worth to check
message:
    - match: "security"

--- #!oauth_string
extends: base
case_sensitive: true
diff: add
line:
    - match: "[^N]OAuth"
    - except: "django-oauth-toolkit"
    - except: "with_oauth2_access_token"
    - except: "OAuthToken.objects"
file:
    - except: 'requirements.*\.txt$'
tests:
    - pass: "oauth_token = OAuthToken.get()"
    - fail: "oauth_token = OAuthToken.objects.get()"
    - fail: "django-oauth-toolkit==0.5.0"
    - fail: "@with_oauth2_access_token"

--- #!debug_true
extends: base
case_sensitive: false
diff: add
line:
    - match: 'debug\s*=\s*true'
tests:
    - pass: "debug = true"
    - pass: "DEBUG=True"
    - fail: "debug = false"
    - fail: "DEBUG=False"
