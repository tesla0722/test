--- #!~base
description: Alert configs exported from the previous format
extends: whitelisted_files::whitelisted_files,comments::comments

--- #!django_middleware_classes
extends: base
diff: add
line:
    - match: middleware\_classes.*
file:
    - match: .*\.cfg

--- #!redirect_field_usage
extends: base
diff: add
line:
    - match: request.*\.get\(('next'|redirect_field).*

--- #!oauth_string
extends: base
diff: add
line:
    - match: "[^N]oauth.*"
file:
    - except: 'reqirements.*\.txt'

--- #!unsafe_as_htmlText
extends: base
diff: add
line:
    - match: \.htmlText.*=.*
    - except: .*=.*htmlEscape.*
file:
    - match: .*\.(as)

--- #!csharp_base64
extends: base
diff: add
line:
    - match: \.ToBase64String.*
file:
    - match: .*\.(cs)

--- #!new_url_endpoint
extends: base
diff: add
line:
    - match: \+\s+(url)*\(r'\^.*\$',.*
file:
    - match: .*/urls\.py

--- #!jsonp_middleware
extends: base
diff: add
line:
    - match: middleware.*(JSONP|jsonp).*

--- #!django_xfo_exempt
extends: base
diff: add
line:
    - match: "@xframe_options_exempt.*"
file:
    - match: .*\.py

--- #!hashing_function
extends: base
diff: add
line:
    - match: (SHA|MD|sha|md)[0-9]+\(.*

--- #!jsonp_usage
extends: base
diff: add
line:
    - match: \$\.jsonp\(.*

--- #!direct_prezi_access_helpers
extends: base
diff: add
line:
    - match: zuibackend\.cache(\.get_prezi|\s+import\s+get_prezi).*
file:
    - match: .*\.(py)

--- #!csharp_storage
extends: base
diff: add
line:
    - match: Windows\.Storage.*
file:
    - match: .*\.(cs)

--- #!http_variable_used_js
extends: base
diff: add
line:
    - match: (Node\.url\.parse|\.query\.)
file:
    - match: '\.(hx|js)$'

--- #!cross-domain-policy-access
extends: base
diff: add
line:
    - match: (allow-access-from domain="*").*

--- #!s3_set_object_acl
extends: base
diff: add
line:
    - match: (setObjectAcl|set_acl|set_canned_acl).*

--- #!http_response_js
extends: base
diff: add
line:
    - match: (\.end\(.*req\.).*
file:
    - match: .*\.(hx|js)

--- #!direct_prezi_access
extends: base
diff: add
line:
    - match: Presentation\.objects\.(all|get_by_id_or_oid).*
file:
    - match: .*\.(py)

--- #!js_network_listen
extends: base
diff: add
line:
    - match: (WebSocket|\.listen\(|http\.request|socket\.io).*
    - except: EventListener\.
file:
    - match: .*\.(hx|js)

--- #!cpp_format_string
extends: base
diff: add
line:
    - match: (v?s?n?f?printf|f?s?scanf)\(".*".*,.*
    - match: (syslog)\(.*
file:
    - match: .*\.(cpp|cxx|h|hpp|c)$
tests:
    - fail: 'printf("Error: invalid aspect mode\n");'
    - fail: 'printf("  -a  --aspect=ASPECT_MODE    screenshot aspect ratio mode: fit(default), crop, auto\n");'
    - pass: 'printf("Error: invalid aspect mode\n", a, b, c);'
    - pass: 'printf("  -a  --aspect=ASPECT_MODE    screenshot aspect ratio mode: fit(default)", "crop", "auto");'
    - pass: 'syslog("Error: invalid aspect mode\n");'
    - fail: 'syslog used for logging'
    - pass: 'syslog(LOG_ERR | LOG_USER, "First fork failed: %m");'

--- #!chef_new_vhost
extends: base
diff: add
line:
    - match: (apache|nginx)\_vhost.*
file:
    - match: .*\.(rb)

--- #!urlopen
extends: base
diff: add
line:
    - match: (urlopen\(|pycurl\.Curl|_make_call\().*
file:
    - match: .*\.(py)

--- #!chef_new_services
extends: base
diff: add
line:
    - match: (prezi\_django\_app\_base\_placement|prezi\_placement\_deploy|supervisor\_service|apache\_vhost|Virtualhost ).*
file:
    - match: .*\.(rb|erb)

--- #!root_what
extends: base
diff: add
line:
    - match: ("|')root("|')root.*

--- #!django_xfo_remove
extends: base
diff: add
line:
    - match: \-.*clickjacking.XFrameOptionsMiddleware.*
file:
    - match: .*\.(py|cfg)

--- #!js_file_access
extends: base
diff: add
line:
    - match: (Node\.fs\.).*
file:
    - match: .*\.(hx|js)

--- #!interesting_object_get
extends: base
diff: add
line:
    - match: objects\.get\(.*request\..*

--- #!tastypie_usage
extends: base
diff: add
line:
    - match: tastypie.*

--- #!csharp_invokescript
extends: base
diff: add
line:
    - match: WebBrowser\.InvokeScript.*
file:
    - match: .*\.(cs)

--- #!cpp_system_popen_calls
extends: base
diff: add
case_sensitive: true
line:
    - match: (system|popen|exec(ve)?|execvp?|execlp?)\(.*
file:
    - match: .*\.(cpp|cxx|h|hpp|c)$

--- #!python_object_enumeration
extends: base
diff: add
line:
    - match: (\.get_by_secondary_key\().*
file:
    - match: .*\.(py)

--- #!godauth_whitelist
extends: base
diff: add
line:
    - match: "\"who\"\\: \"all\".*"
file:
    - match: .*\.(json)

--- #!csharp_request
extends: base
diff: add
line:
    - match: client\.(Post|Get).*(Request).*
file:
    - match: .*\.(cs)

--- #!cpp_bof_calls
extends: base
diff: add
line:
    - match: (strcpy|strcat|f?gets|memcpy)\(.*
file:
    - match: .*\.(cpp|cxx|h|hpp|c)$

--- #!dom_event_parameter
extends: base
diff: add
line:
    - match: \son\w+=\s*('|").*
file:
    - except: .*\.(xml)

--- #!python_password_form
extends: base
diff: add
line:
    - match: (forms\.PasswordInput).*
file:
    - match: .*\.(py)

--- #!chef_new_user_access
extends: base
diff: add
line:
    - match: "(assessment_weekers =|\"users\": |recipe\\[users\\:\\:).*"
file:
    - match: .*\.(rb|json)

--- #!backbonejs_model_get
extends: base
diff: add
line:
    - match: this\.model\.get.*
file:
    - match: .*\.(js|html)

--- #!python_remote_objects
extends: base
diff: add
line:
    - match: (RemoteUserFactory).*
file:
    - match: .*\.(py)

--- #!chef_new_open_port
extends: base
diff: add
line:
    - match: \+\s*bind\s*=.*
file:
    - match: .*\.(rb|erb)

--- #!unsafe_underscore_js_template
extends: base
diff: add
line:
    - match: <%=.*
file:
    - match: .*\.(js|html|tpl)$
    - except: 'Gruntfile.js$'
